INFO:    Converting SIF file to temporary sandbox...
ℹ Loading vmrseq
Warning messages:
1: replacing previous import ‘GenomicRanges::union’ by ‘dplyr::union’ when loading ‘vmrseq’ 
2: replacing previous import ‘GenomicRanges::intersect’ by ‘dplyr::intersect’ when loading ‘vmrseq’ 
3: replacing previous import ‘GenomicRanges::setdiff’ by ‘dplyr::setdiff’ when loading ‘vmrseq’ 
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
✔ ggplot2 3.3.6     ✔ purrr   0.3.4
✔ tibble  3.1.7     ✔ dplyr   1.0.9
✔ tidyr   1.2.0     ✔ stringr 1.4.0
✔ readr   2.1.2     ✔ forcats 0.5.1
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks vmrseq::filter(), stats::filter()
✖ dplyr::lag()    masks vmrseq::lag(), stats::lag()
✖ purrr::reduce() masks vmrseq::reduce()

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:vmrseq’:

    between, first, last, shift

Loading required package: DelayedArray
Loading required package: stats4
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:vmrseq’:

    combine, intersect, setdiff, union, var

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,
    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,
    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which.max, which.min

Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count

The following object is masked from ‘package:vmrseq’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:Matrix’:

    expand, unname

The following objects are masked from ‘package:data.table’:

    first, second

The following objects are masked from ‘package:dplyr’:

    first, rename

The following object is masked from ‘package:tidyr’:

    expand

The following objects are masked from ‘package:vmrseq’:

    first, rename

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:data.table’:

    shift

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

The following object is masked from ‘package:purrr’:

    reduce

The following objects are masked from ‘package:vmrseq’:

    collapse, desc, slice


Attaching package: ‘DelayedArray’

The following object is masked from ‘package:purrr’:

    simplify

The following objects are masked from ‘package:base’:

    aperm, apply, rowsum, scale, sweep

Loading required package: rhdf5

Attaching package: ‘HDF5Array’

The following object is masked from ‘package:rhdf5’:

    h5ls

Loading required package: GenomicRanges
Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Smoothing in progress...
...Chromosome pseudo: Variance computed (0.92 min). 
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.19 on variance.
...Finished calling candidate regions - found 519 candidate regions in total.
  ...0.39% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 0.72 min and 506 VMRs found in total.
  ...0.38% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.18 on variance.
...Finished calling candidate regions - found 879 candidate regions in total.
  ...0.87% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 1.75 min and 864 VMRs found in total.
  ...0.85% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.16 on variance.
...Finished calling candidate regions - found 1366 candidate regions in total.
  ...1.83% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 3.34 min and 1366 VMRs found in total.
  ...1.79% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.14 on variance.
...Finished calling candidate regions - found 1783 candidate regions in total.
  ...2.78% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 5.1 min and 1786 VMRs found in total.
  ...2.68% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.12 on variance.
...Finished calling candidate regions - found 1976 candidate regions in total.
  ...3.66% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 8.21 min and 1977 VMRs found in total.
  ...3.46% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.10 on variance.
...Finished calling candidate regions - found 2414 candidate regions in total.
  ...4.31% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 8.81 min and 2100 VMRs found in total.
  ...3.83% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.09 on variance.
...Finished calling candidate regions - found 3210 candidate regions in total.
  ...4.88% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 10.94 min and 2227 VMRs found in total.
  ...3.97% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.08 on variance.
...Finished calling candidate regions - found 4144 candidate regions in total.
  ...5.49% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 10.78 min and 2331 VMRs found in total.
  ...4.03% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.08 on variance.
...Finished calling candidate regions - found 5248 candidate regions in total.
  ...6.18% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 11.77 min and 2437 VMRs found in total.
  ...4.1% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.07 on variance.
...Finished calling candidate regions - found 6364 candidate regions in total.
  ...6.9% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 12.73 min and 2515 VMRs found in total.
  ...4.14% QC-passed sites are called to be in VMRs.
Parallel: Parallelizing using 14 workers/cores (backend: BiocParallel:MulticoreParam).
Step 1: Detecting candidate regions...
...Calling candidate regions with cutoff of 0.07 on variance.
...Finished calling candidate regions - found 7468 candidate regions in total.
  ...7.64% QC-passed sites are called to be in candidate regions.
Step 2: Detecting VMRs...
...Finished detecting VMRs - took 13.85 min and 2577 VMRs found in total.
  ...4.18% QC-passed sites are called to be in VMRs.
INFO:    Cleaning up image...
